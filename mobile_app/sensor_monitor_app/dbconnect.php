<?php\nclass DBConnection {\n    private $host = \'localhost\';\n    private $user = \'humancmt_hfsha_dht11_admin\';\n    private $pass = \'VndN#syyYPj@\';\n    private $dbname = \'humancmt_hfsha_dht11\';\n    private $conn;\n    \n    public function __construct() {\n        // Set reporting for connection errors temporarily to capture details\n        mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n        \n        try {\n            $this->conn = new mysqli($this->host, $this->user, $this->pass, $this->dbname);\n            $this->conn->set_charset(\"utf8mb4\");\n        } catch (mysqli_sql_exception \$e) {\n            // Log the connection error\n            $this->logError(\"Connection failed: \" . \$e->getMessage());\n            // Set conn to null on failure instead of dying\n            $this->conn = null;\n        } finally {\n             // Revert mysqli reporting to default after attempting connection\n            mysqli_report(MYSQLI_REPORT_ERROR);\n        }\n    }\n    \n    public function getConnection() {\n        return $this->conn;\n    }\n    \n    public function close() {\n        if ($this->conn !== null) {\n            $this->conn->close();\n            $this->conn = null; // Set to null after closing\n        }\n    }\n    \n    public function insertDHTData($device_id, $temperature, $humidity, $relay_status) {\n        if ($this->conn === null) {\n            $this->logError(\"DBConnection::insertDHTData called with no active connection.\");\n            return false;\n        }\n        // Assuming your sensor data table is tbl_dht11 based on your original insertDHTData\n        $stmt = $this->conn->prepare(\"INSERT INTO tbl_dht11 (device_id, temperature, humidity, relay_status) VALUES (?, ?, ?, ?)\");\n        \n        if ($stmt === false) {\n            $this->logError(\"Prepare failed in insertDHTData: (\" . $this->conn->errno . \") \" . $this->conn->error);\n            return false;\n        }\n\n        $stmt->bind_param(\"idds\", $device_id, $temperature, $humidity, $relay_status);\n        $result = $stmt->execute();\n        \n        if ($result === false) {\n             $this->logError(\"Execute failed in insertDHTData: (\" . $stmt->errno . \") \" . $stmt->error);\n        }\n\n        $stmt->close();\n        return $result; // Returns true on success, false on failure\n    }\n    \n    // Method to get the latest sensor readings\n    public function getLatestReadings($device_id, $limit = 50) {\n         if ($this->conn === null) {\n            $this->logError(\"DBConnection::getLatestReadings called with no active connection.\");\n            return []; // Return empty array if no connection\n        }\n\n        // Assuming your sensor data table is tbl_dht11\n        $stmt = $this->conn->prepare(\"SELECT * FROM tbl_dht11 WHERE device_id = ? ORDER BY created_at DESC LIMIT ?\");\n        \n         if ($stmt === false) {\n            $this->logError(\"Prepare failed in getLatestReadings: (\" . $this->conn->errno . \") \" . $this->conn->error);\n            return [];\n        }\n\n        $stmt->bind_param(\"ii\", $device_id, $limit);\n        $stmt->execute();\n        $result = $stmt->get_result();\n        $data = \$result->fetch_all(MYSQLI_ASSOC);\n        \$stmt->close();\n        return array_reverse(\$data); // Oldest first for charts\n    }\n\n    // Method to fetch thresholds from tbl_threshold\n    // Assumes a single row for thresholds, typically with a fixed ID (e.g., id=1)\n    public function getThresholds() {\n        if ($this->conn === null) {\n            $this->logError(\"DBConnection::getThresholds called with no active connection.\");\n            return [\"temp_threshold\" => 26.0, \"hum_threshold\" => 70.0]; // Return defaults\n        }\n\n        // Adjust query if your threshold row logic is different\n        $sql = \"SELECT temp_threshold, hum_threshold FROM tbl_threshold WHERE id = 1 LIMIT 1\";\n        $result = $this->conn->query($sql);\n\n        if ($result === false) {\n             $this->logError(\"Query failed in getThresholds: (\" . $this->conn->errno . \") \" . $this->conn->error);\n             return [\"temp_threshold\" => 26.0, \"hum_threshold\" => 70.0]; // Return defaults on query failure\n        }\n\n        if ($result->num_rows > 0) {\n            $thresholds = $result->fetch_assoc();\n            $result->free(); // Free result set memory\n            return $thresholds; // Return the fetched thresholds\n        } else {\n            // Return default values if no row is found\n            return [\"temp_threshold\" => 26.0, \"hum_threshold\" => 70.0];\n        }\n    }\n\n    // Method to update or insert thresholds into tbl_threshold\n    // Uses REPLACE INTO assuming id=1 for the single row\n    public function setThresholds($temp, $hum) {\n         if ($this->conn === null) {\n            $this->logError(\"DBConnection::setThresholds called with no active connection.\");\n            return false;\n        }\n\n        // Using REPLACE INTO to insert or update the single row with id=1\n        // Make sure \'id\' is a primary key in your tbl_threshold\n        $sql = $this->conn->prepare(\"REPLACE INTO tbl_threshold (id, temp_threshold, hum_threshold, updated_at) VALUES (1, ?, ?, NOW())\");\n\n        if ($sql === false) {\n            $this->logError(\"Prepare failed in setThresholds: (\" . $this->conn->errno . \") \" . $this->conn->error);\n            return false;\n        }\n\n        $sql->bind_param(\"dd\", $temp, $hum); // 'd' for double/float\n\n        $result = $sql->execute();\n\n        if ($result === false) {\n             $this->logError(\"Execute failed in setThresholds: (\" . $sql->errno . \") \" . $sql->error);\n        }\n\n        $sql->close();\n        return $result; // Returns true on success, false on failure\n    }\n    \n    private function logError($message) {\n        $log_file = __DIR__ . '/dberrors.log';\n        $timestamp = date(\"[Y-m-d H:i:s]\");\n        error_log(\"$timestamp $message\\n\", 3, \$log_file);\n    }\n}\n?> 